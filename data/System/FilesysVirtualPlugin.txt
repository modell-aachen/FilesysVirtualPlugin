---+!! !FilesysVirtualPlugin
<!--
One line description, required for extensions repository catalog.
   * Set SHORTDESCRIPTION = Implementation of the Filesys::Virtual protocol over a Foswiki store
-->
%SHORTDESCRIPTION%

%TOC%

This module provides an =Filesys::Virtual= implementation layered over a
Foswiki store. See CPAN:Filesys::Virtual for more information.

Obviously a full filesystem is a lot more generic than a Foswiki store, so
there has to be some mapping between what is in the store and the filesystem,
and some constraints on what can and can't be done with the filesystem.

In the default configuration, the store is mapped as follows:
   * Webs are directories
   * Topics are seen as plain files that have a =.txt= extension,
     e.g. =MyTopic.txt=. Other data views, such as =.html=, are also available.
   * Attachments are stored in a =Topic_files/= directory, e.g.
     =MyTopic_files/=

Wiki access controls are respected at all levels in the store.

Note: You _cannot_ create subdirectories in a =_files= directories.

The module currently uses =Foswiki::Func= methods with the absolute minimum
of unavoidable kick-down to the file system when the Foswiki APIs just don't
provide the required information. The unavoidable kick-down means that this
module will only work with the RCS-based stores, =RcsWrap= and =RcsLite=.

The module supports a simple lock API, which is driven by the requirements
of !WebDAV. This lock implementation does _not_ relate in any way to Foswiki
leases or atomic locks; it is purely for the support of !WebDAV clients that
require locks.

---++ Configuration

Foswiki topics are stored internally in TML (Topic Markup Language). TML is
the special wiki markup syntax you see if you "Raw View" a topic. Also mixed
into topics is meta-data, such as form fields.

Neither TML not meta-data are supported by commonly available editing tools,
such as word processors. So <nop>%TOPIC% supports different _views_ of the data
in topics for read and write. Each view you enable adds another file type to
the directory representing a web. For example, if you enable the =txt=, =html=, and =json= views you will see the following files for =MyTopic=:
   * <nop>MyTopic.txt
   * <nop>MyTopic.html
   * <nop>MyTopic.json
Any of these files can be written to change the content of <nop>MyTopic.

The following standard views are available:
| *View* | *Description* |
| =txt= | Presents *just* the TML text of the topic in a .txt file. |
| =html= | Topic text a =.html= file (mapping provided by the WysiwygPlugin). This allows you to edit topics using an HTML-capable editor. |
| =json= | Meta-data in JSON format in a =.json= file |
| =perl= | Meta-data as a serialised perl data structure in a =.perl= file |
| =raw= | Presents the raw text of the topic in a =.raw= file. The raw topic text includes embedded meta-data macros. |

You can choose which views you want using the Foswiki =configure= interface.

---++ Installation Instructions

You do not need to install anything in the browser to use this extension. The following instructions are for the administrator who installs the extension on the server.

Open configure, and open the "Extensions" section. Use "Find More Extensions" to get a list of available extensions. Select "Install".

If you have any problems, or if the extension isn't available in =configure=, then you can still install manually from the command-line. See http://foswiki.org/Support/ManuallyInstallingExtensions for more help.


Note: This plugin doesn't actually have to be enabled in order to work.
At the moment it uses standard Foswiki access control checking methods,
but the plan is to add a permissions cache. For this reason it has to be
a plugin so it can implement handlers that watch for topic saves. 

Note that locks are stored in a database file, held in the working area
for the plugin - usually =working/FilesysVirtualPlugin/lockdb=. You can
delete this file at any time to automatically release all outstanding locks.

---++ Filesys::Virtual::PlainPlusAttrs

Also included in the module is =Filesys::Virtual::PlainPlusAttrs= that extends =Filesys::Virtual::Plain= with extended attributes and locks. This is primarily used for testing the WebDAVContrib, by providing that module with a full filesystem interface. It is not directly useful to Foswiki but is provided as a reference implementation of the file system interface that the WebDAVContrib requires.

---++ License
This software is released under the GNU Public License, version 2. However it cost a lot in blood, sweat and tears to develop, and you are respectfully requested to purchase a support contract (available from http://kontextwork.de). By doing so you not only gain direct access to the support of the most experienced Foswiki developers working on the project, but you are also helping to make the further development of open-source Foswiki possible. 

---++ Info
Another great Foswiki extension from the <a style="text-decoration:none" href="http://wikiring.com"><img src="%ATTACHURLPATH%/wikiringlogo20x20.png" alt="" /> *WikiRing* </a> - working together to improve your wiki experience!

Many thanks to the following sponsors for supporting this work:
   * [[http://Kontextwork.de][Kontextwork]]

|  Author(s): | Crawford Currie http://c-dot.co.uk |
|  Copyright: | &copy; 2008 !KontextWork.de, &copy; 2008-2013 Crawford Currie http://c-dot.co.uk |
|  License: | [[http://www.gnu.org/licenses/old-licenses/gpl-2.0.html][GPL2 (Gnu General Public License v2)]] |
|  Release: | /jidQrcaozxnxTDSHEh3qA |
|  Version: | 1.6.2 |
|  Change History: | <!-- versions below in reverse order -->&nbsp; |
|  Dependencies: | <table class="foswikiTable" border="1"><tr><th>Name</th><th>Version</th><th>Description</th></tr><tr><td align="left">Filesys::Virtual</td><td align="left">&gt;=0</td><td align="left">Standard perl module</td></tr><tr><td align="left">Storable</td><td align="left">&gt;=0</td><td align="left">Required, used for the locks database</td></tr><tr><td align="left">POSIX</td><td align="left">&gt;=0</td><td align="left">Standard perl module</td></tr><tr><td align="left">File::Path</td><td align="left">&gt;=0</td><td align="left">Standard perl module</td></tr><tr><td align="left">IO::File</td><td align="left">&gt;=0</td><td align="left">Standard perl module</td></tr><tr><td align="left">IO::String</td><td align="left">&gt;=0</td><td align="left">Standard perl module</td></tr><tr><td align="left">Foswiki::Plugins::WysiwygPlugin</td><td align="left">&gt;=0</td><td align="left">Optional, required for .html view</td></tr><tr><td align="left">JSON</td><td align="left">&gt;=0</td><td align="left">Optional, required for the .json view</td></tr></table> |

<!-- Do _not_ attempt to edit this topic; it is auto-generated. Please add comments/questions/remarks to the feedback topic on twiki.org instead. -->
